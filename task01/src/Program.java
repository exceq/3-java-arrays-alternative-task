import java.awt.*;
import java.util.ArrayList;


public class Program {
    public static void main(String[] args) {
        //region String[5] textMaps = Dungeons
        String[] textMaps = new String[] {
                "#s###\n" +
                "#...#\n" +
                "..#.#\n" +
                ".#..#\n" +
                "###.f",
                "#####################\n" +
                "#s..................#\n" +
                "#...................#\n" +
                "#...................#\n" +
                "#...................#\n" +
                "#..............f....#\n" +
                "#...................#\n" +
                "#...................#\n" +
                "#...................#\n" +
                "#...................#\n" +
                "#...................#\n" +
                "#........f..........#\n" +
                "#...........f.......#\n" +
                "#......f............#\n" +
                "#.............f.....#\n" +
                "#....f..............#\n" +
                "#...................#\n" +
                "#...................#\n" +
                "#...................#\n" +
                "#..................f#\n" +
                "#####################",
                "#####################\n" +
                "#s..........#.....#.#\n" +
                "#.#########.#.#.#.#.#\n" +
                "#.....#...#.#.#.#..f#\n" +
                "#####.#.###.###.#####\n" +
                "#.#...#...#.....#...#\n" +
                "#.#.#####.#######.#.#\n" +
                "#.#.....#.#...#...#.#\n" +
                "#f#####.#.#.#.#.###.#\n" +
                "#.#.........#.#.#...#\n" +
                "#.#.###.#.#.#.#.#.###\n" +
                "#...#...#.#.#...#...#\n" +
                "#####.###.#.#.#####.#\n" +
                "#.#...#...#.#.......#\n" +
                "#.#f####.##.#.#.###.#\n" +
                "#...#.....#.#.#..f#.#\n" +
                "#####.#.#.#...#####.#\n" +
                "#...#.#.#...#...#...#\n" +
                "#.###.#.#######.#.###\n" +
                "#.....#.............f\n" +
                "#####################",
                "#####################\n" +
                "f.#f#.......#.......#\n" +
                "#.#.#.#####.#.#.###.#\n" +
                "#...#.#...#...#.#...#\n" +
                "#.#.#.#.#.#####.#.###\n" +
                "#.#.#.#.#.#.....#...#\n" +
                "#.#.#.#.#.#.#.###.###\n" +
                "#.#...#.#.#.#..f#...#\n" +
                "#.##.##.#...#.#####.#\n" +
                "#.......#.#.#.......#\n" +
                "#.#####.###.#####.#.#\n" +
                "#.......#...#.#...#.#\n" +
                "#.#######.###.#.###.#\n" +
                "#...#...#...#.....#.#\n" +
                "###.#.#.###.##.##.###\n" +
                "#...#.#..f#.#...#...#\n" +
                "#.###.#.###.#.#.###.#\n" +
                "#...#.#.#.....#.#.#.#\n" +
                "###.#.#.#.#####.#.#.#\n" +
                "#.....#...#.....#..s#\n" +
                "#####################",
                "#####################\n" +
                "#.....#...#...#.#...#\n" +
                "#s###.#.#.#...#.#.#.#\n" +
                "#...#.#.#.#...#...#.#\n" +
                "#...#.#.#.#####.#.#f#\n" +
                "#...#...#.#.....#.###\n" +
                "###.###.#.#########f#\n" +
                "#.#...#...........#.#\n" +
                "#.#.#....####.#.#.#.#\n" +
                "#...#.....#...#.#...#\n" +
                "#####.###.#.#.#######\n" +
                "#.....#...#.#.......#\n" +
                "#.#####.###.#.......#\n" +
                "#.#...#.....#.......#\n" +
                "#.#.#.#.#####.#####.#\n" +
                "#.#.#.......#.#.....#\n" +
                "#.#.#######.#.#.#.###\n" +
                "#.....#...#.#.#.#.#.#\n" +
                "###.#.#.#.###...#.#.#\n" +
                "#f..#.#.#.......#...f\n" +
                "#####################",
                "###################################################\n" +
                "s.........#.#.........#...#.........#.......#...#.#\n" +
                "#########.#.#.#.#######.#.#.#.#####.#######.#.#.#.#\n" +
                "#.#.........#.#.....#...#...#...#...#...#...#.#.#.#\n" +
                "#.#.#######.#.###.###.#########.#.###.#.#.#####.#.#\n" +
                "#...#.....#.#.#f..#...#.......#.#...#.#...#....f#.#\n" +
                "#####.###.#.#.#####.###.#######.###.#.#.###.#.###.#\n" +
                "#...#...#...#.....#...#.......#.#.#...#...#.#.#...#\n" +
                "#.#.###.#####.###.###.#####.#.#.#.#######.#.#.#.#.#\n" +
                "#.#.#...#...#.#.#.....#.....#...#...#.......#...#.#\n" +
                "#.###.###.#.#.#.#######.#######.###.#.###.#######.#\n" +
                "#.....#...#.#.#...#.#...#.........#.#.#.#.#...#...#\n" +
                "###.###.#.#.#.###.#.#.###########.#.#.#.#.###.#.###\n" +
                "#.#.#...#.#...#.....#.......#...#...#...#.....#...#\n" +
                "#.#.#.#########.####..#####.#.#.#.#.###########.###\n" +
                "#.....#...#.....#.........#...#...#...#.....#.#...#\n" +
                "###.#####.#####.#.#.#.###.#####.#####.#.###.#.###.#\n" +
                "#...#.....#.....#.#...#.#.....#.#...#...#...#...#.#\n" +
                "#.###.###.#.#####.#####.#.#####.#.#######.#####.#.#\n" +
                "#...#.#.#.#.......#...#...#.....#.........#...#...#\n" +
                "###.#.#.#.###.#####.#.#####.##.######.#####.#.#.###\n" +
                "#...#.#...#...#.....#.......#.....#.#.#.....#.#...#\n" +
                "#.#####.###.###.#############.###.#.#.#.#####.#.#.#\n" +
                "#...#.......#.........#.....#...#.#.#.#.....#...#.#\n" +
                "###.#.#.#####.#.#####.#.###.#####.#.#.#####.#####.#\n" +
                "#...#.#.#.....#...#...#.#.........#...#.....#f....#\n" +
                "#.#####.#.#########.###.###.###########.###.###.#.#\n" +
                "#.#.........#.....#...#...#.....#...#.#...#.....#.#\n" +
                "#.#.#######.#.###.#.#####.#####.#.#.#.###.#.#####.#\n" +
                "#...#...#...#...#.#.......#...#...#...#.#...#.....#\n" +
                "##.##.#.#.#####.#.#########.#.#######.#.###.#####.#\n" +
                "#...#.#.#.......#.#.........#.#...#...#.......#...#\n" +
                "#.#.#.#.#########.#.#########.#.#.#.###.#####.#.###\n" +
                "#.#...#...#.......#.......#...#.#.#.#.....#.#...#.#\n" +
                "#.#######.#.###.#########.#.#.###.#.###.#.#.#####.#\n" +
                "#.#.......#.#.#...#...#.#.#.#.....#.....#...#...#.#\n" +
                "#.#.#######.#.###.#.#.#.#.#.#########.####.##.#.#.#\n" +
                "#.#.....#...#.#.....#.#.#.#.#.........#.....#.#...#\n" +
                "#.#######.###.###.###.#.#.#.#.###.#.###.###.#.#####\n" +
                "#.#.......#.......#...#...#.......#.#.............#\n" +
                "#.#.#.#######.#.###.#####.#####.###.#.####.####.#.#\n" +
                "#...#...#...#.#...#.....#.....#.#...#.#.....#...#.#\n" +
                "#########.#.#.#########.#####.#.#.#.#.#.###.#.###.#\n" +
                "#.........#...#.......#.#...#...#.#...#.....#.....#\n" +
                "#.######.######.#######.#.#####.###.#####.#.#.#.###\n" +
                "#.#.#.......#...........#f..#...#...#.....#.#.#...#\n" +
                "#f#.#.#####.#.###.#########.#.#.#.#.#.#####.#.#.#.#\n" +
                "#...#...#.....#.....#.......#.#.#.#.....#.#.#.#.#.#\n" +
                "###.###.#.#########.#.#.#####.#.###.###.#.#.#.###.#\n" +
                "#...#.................#.......#.....#...#........f#\n" +
                "###################################################"};
        //endregion / ds
        Map[] maps = GetMaps(textMaps);

        int index = 0;
        Map map = maps[index];

        ArrayList<SinglyLinkedList<Point>> path = Task.FindPath(map, map.InitialPosition, map.Exits);

        String[][] chars = GetStrArray(textMaps[index]);
        PrintStrArray(chars);
        System.out.println();

        PrintColorPaths(chars, map, path);
    }

    private static void PrintColorPaths(String[][] chars, Map map, ArrayList<SinglyLinkedList<Point>> path) {
        if (path == null)
            System.out.println("Путь не найден.");
        else {
            for (SinglyLinkedList<Point> p : path) {
                while (p != null) {
                    chars[p.Value.y][p.Value.x] = "\u001B[32m" + "*" + "\u001B[0m";
                    p = p.Previous;
                }
            }
            for (Point p : map.Exits) {
                chars[p.y][p.x] = "\u001B[33m" + "*" + "\u001B[0m";
            }
            chars[map.InitialPosition.y][map.InitialPosition.x] = "\u001B[31m" + "*" + "\u001B[0m";
            PrintStrArray(chars);
        }
    }

    private static Map[] GetMaps(String[] textMaps) {
        Map[] maps = new Map[textMaps.length];
        for (int i = 0; i < textMaps.length; i++) {
            maps[i] = Map.FromText(textMaps[i]);
        }
        return maps;
    }


    static void PrintStrArray(String[][] str) {
        for (int i = 0; i < str.length; i++) {
            for (int j = 0; j < str[0].length; j++) {
                String s =str[i][j];
                System.out.print(s.equals(".") ? " " : s);
            }
            System.out.println();
        }
    }

    static String[][] GetStrArray(String[] strings) {
        String[][] charArray = new String[strings.length][strings[0].length()];
        for (int i = 0; i < strings.length; i++) {
            for (int j = 0; j < strings[0].length(); j++) {
                charArray[i][j] = strings[i].charAt(j) + "";
            }
        }
        return charArray;
    }

    static String[][] GetStrArray(String string) {
        return GetStrArray(string.split("\n"));
    }
}
